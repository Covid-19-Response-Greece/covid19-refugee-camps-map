{"version":3,"sources":["webpack:///./src/pages/covid19camps.js"],"names":["CENTER","FifthPage","React","useState","data","setdata","filter","setfilter","map","leafletElement","Array","isArray","length","geoJson","type","features","element","total_confirmed_cases","region","lat","latitude","lng","longtitude","properties","geometry","coordinates","L","GeoJSON","pointToLayer","feature","latlng","casesString","capacity","lastupdate","description","name_gr","region_gr","total_samples","slice","html","marker","icon","divIcon","className","riseOnHover","addTo","useEffect","response","axios","get","fetchData","mapSettings","center","defaultBaseMap","zoom","mapEffect","zoomSnap","zoomDelta","setMappingFilter","pageName"],"mappings":"0OAYMA,EAAS,CAHR,UACA,UAqIQC,UAhIG,WAAO,IAAD,EACEC,IAAMC,SAAS,IAAhCC,EADe,KACTC,EADS,OAEMH,IAAMC,UAAS,GAApCG,EAFe,KAEPC,EAFO,wCAoBtB,aAAwD,IAAbC,QAAY,MAAJ,GAAI,GAA5BC,eAGzB,GAFgBC,MAAMC,QAAQP,IAASA,EAAKQ,QAAU,EAEtD,CAEA,IAAMC,EAAU,CACdC,KAAM,oBACNC,SAAUX,EACPE,QAAO,SAACU,GACP,OAAsC,IAAlCA,EAAQC,wBAA0C,IAAXX,KAI5CE,KAAI,SAACU,QAAgB,IAAhBA,MAAS,IAAO,MACuBA,EAAzBC,EADE,EACZC,SAA2BC,EADf,EACGC,WACvB,MAAO,CACLR,KAAM,UACNS,WAAW,OAAD,UACLL,GAELM,SAAU,CACRV,KAAM,QACNW,YAAa,CAACJ,EAAKF,SAMP,IAAIO,IAAEC,QAAQd,EAAS,CAC3Ce,aAAc,SAACC,EAAcC,QAAW,IAAzBD,MAAU,IAAe,IAElCE,EAFkC,EACVF,EAApBN,kBAD8B,MACjB,GADiB,EAKpCS,EAOET,EAPFS,SACeC,EAMbV,EANF,eACAW,EAKEX,EALFW,YACAC,EAIEZ,EAJFY,QACAC,EAGEb,EAHFa,UACAnB,EAEEM,EAFFN,sBACAoB,EACEd,EADFc,cAGFN,EAAW,GAAMd,EAEbA,EAAwB,MAC1Bc,EAAiBA,EAAYO,MAAM,GAAI,GAA5B,MAGb,IAAMC,EAAI,yHAGUJ,EAHV,8BAIIC,EAJJ,sEAMsBJ,EANtB,oEAOoCK,EAPpC,kEAQwCpB,EARxC,uDAS6BiB,EAT7B,0EAU2CD,EAV3C,sEAaFF,EAbE,oCAiBV,OAAOL,IAAEc,OAAOV,EAAQ,CACtBW,KAAMf,IAAEgB,QAAQ,CACdC,UAAW,OACXJ,SAEFK,aAAa,OAKLC,MAAMrC,QAhGA,sBAGtBN,IAAM4C,WAAU,WAAM,mCACpB,YACE,IAAMC,QAAiBC,IAAMC,IAC3B,uDAGF5C,EAAQ0C,EAAS3C,KAAK,sBANJ,uBAAC,WAAD,wBAQpB8C,KACC,IAuFH,IAAMC,EAAc,CAClBC,OAAQpD,EACRqD,eAAgB,gBAChBC,KAxGiB,KAyGjBC,UAvGoB,4CAwGpBC,SAAU,IACVC,UAAW,IAEPC,EAAmB,WACvBnD,GAAWD,IAEb,OACE,kBAAC,IAAD,CAAQqD,SAAS,QACf,kBAAC,IAAD,KACE,sDAEDrD,GAAU,kBAAC,IAAD,iBAAS6C,EAAT,CAAsB5C,UAAWmD,MAC1CpD,GAAU,kBAAC,IAAD,iBAAS6C,EAAT,CAAsB5C,UAAWmD,KAE7C,kBAAC,IAAD,CAAW5C,KAAK,UAAU6B,UAAU,cAClC,+EACA,8BACA,sCACA,uBAAGA,UAAU,QAAb","file":"component---src-pages-covid-19-camps-js-f7d2f00df7b005b994f1.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\nimport Layout from \"components/Layout\";\nimport Container from \"components/Container\";\nimport Map from \"components/Map\";\n\nconst LOCATION = {\n  lat: 38.814566,\n  lng: 23.06738,\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 6.75;\n\nconst FifthPage = () => {\n  const [data, setdata] = React.useState([]);\n  const [filter, setfilter] = React.useState(false);\n  React.useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(\n        \"https://covid-19-greece.herokuapp.com/refugee-camps\"\n      );\n\n      setdata(response.data[\"refugee-camps\"]);\n    }\n    fetchData();\n  }, []);\n\n  /**\n   * mapEffect\n   * @description Fires a callback once the page renders\n   * @example Here this is and example of being used to zoom in and set a popup on load\n   */\n\n  async function mapEffect({ leafletElement: map } = {}) {\n    const hasData = Array.isArray(data) && data.length >= 0;\n\n    if (!hasData) return;\n\n    const geoJson = {\n      type: \"FeatureCollection\",\n      features: data\n        .filter((element) => {\n          if (element.total_confirmed_cases === 0 && filter === false)\n            return false;\n          return true;\n        })\n        .map((region = {}) => {\n          const { latitude: lat, longtitude: lng } = region;\n          return {\n            type: \"Feature\",\n            properties: {\n              ...region,\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [lng, lat],\n            },\n          };\n        }),\n    };\n\n    const geoJsonLayers = new L.GeoJSON(geoJson, {\n      pointToLayer: (feature = {}, latlng) => {\n        const { properties = {} } = feature;\n        let casesString;\n\n        const {\n          capacity,\n          \"last update\": lastupdate,\n          description,\n          name_gr,\n          region_gr,\n          total_confirmed_cases,\n          total_samples,\n        } = properties;\n\n        casesString = `${total_confirmed_cases}`;\n\n        if (total_confirmed_cases > 1000) {\n          casesString = `${casesString.slice(0, -3)}k+`;\n        }\n\n        const html = `\n            <span class=\"icon-marker\">\n              <span class=\"icon-marker-tooltip\">\n                <h3> Camp ${name_gr}</h3>\n                <h3>${region_gr}</h3>\n                <ul>\n                <h2><li>Χωρητικότητα: ${capacity}</li></h2> \n                <li><strong>Αριθμός Tests:</strong> ${total_samples}</li>\n                <li><strong>Κρούσματα COVID19:</strong> ${total_confirmed_cases}</li>\n                  <li><i><h3>Camp info:</h3> ${description} </i></li>\n                  <li><strong>Τελευταία ανανέωση:</strong> ${lastupdate}</li>\n                </ul>\n              </span>\n              ${casesString}\n            </span>\n          `;\n\n        return L.marker(latlng, {\n          icon: L.divIcon({\n            className: \"icon\",\n            html,\n          }),\n          riseOnHover: true,\n        });\n      },\n    });\n\n    geoJsonLayers.addTo(map);\n  }\n\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: \"OpenStreetMap\",\n    zoom: DEFAULT_ZOOM,\n    mapEffect,\n    zoomSnap: 0.25,\n    zoomDelta: 0.5,\n  };\n  const setMappingFilter = () => {\n    setfilter(!filter)\n  };\n  return (\n    <Layout pageName=\"home\">\n      <Helmet>\n        <title>COVID-19 στα Camps</title>\n      </Helmet>\n      {filter && <Map {...mapSettings} setfilter={setMappingFilter} />}\n      {!filter && <Map {...mapSettings} setfilter={setMappingFilter} />}\n\n      <Container type=\"content\" className=\"home-start\">\n        <h2>Refugees Camps - Eξέλιξη των Covid19 κρουσμάτων</h2>\n        <pre></pre>\n        <p>κειμενο</p>\n        <p className=\"note\">Πηγές DATA: </p>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default FifthPage;\n"],"sourceRoot":""}