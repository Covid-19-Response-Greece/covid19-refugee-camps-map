{"version":3,"sources":["webpack:///./src/pages/indexen.js","webpack:///./src/components/Headeren.js","webpack:///./src/components/Layouten.js","webpack:///./src/components/Mapen.js"],"names":["CENTER","IndexPage","React","useState","data","setdata","filter","setfilter","map","leafletElement","Array","isArray","length","geoJson","type","features","element","total_confirmed_cases","region","lat","latitude","lng","longtitude","properties","geometry","coordinates","L","GeoJSON","pointToLayer","feature","latlng","casesString","capacity","lastupdate","name_en","region_en","total_samples","slice","html","marker","icon","divIcon","className","riseOnHover","addTo","useEffect","response","axios","get","fetchData","mapSettings","center","defaultBaseMap","zoom","mapEffect","zoomSnap","zoomDelta","setMappingFilter","pageName","href","Header","isOpen","setIsOpen","Navbar","style","height","fixed","color","dark","expand","NavbarBrand","to","fontSize","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","class","NavbarText","Button","border-radius","role","aria-label","aria-pressed","Layout","children","bodyAttributes","marginTop","Footer","Map","props","rest","mapRef","useRef","useConfigureLeaflet","useRefEffect","ref","effect","basemap","useMapServices","names","find","service","name","mapClassName","isDomAvailable","zoomControl","position"],"mappings":"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","file":"component---src-pages-indexen-js-9884b0bc74f23959ea28.js","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport L, { point } from \"leaflet\";\nimport axios from \"axios\";\nimport Layout from \"components/Layouten\";\nimport Container from \"components/Container\";\nimport Map from \"components/Mapen\";\n\nconst LOCATION = {\n  lat: 38.814566,\n  lng: 24.06738,\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 6.60;\n\nconst IndexPage = () => {\n  const [data, setdata] = React.useState([]);\n  const [filter, setfilter] = React.useState(false);\n  React.useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(\n        \"https://covid-19-greece.herokuapp.com/refugee-camps\"\n      );\n      setdata(response.data[\"refugee-camps\"]);\n    }\n    fetchData();\n  }, []);\n     \n  async function mapEffect({ leafletElement: map } = {}) {\n\n    const hasData = Array.isArray(data) && data.length >= 0;\n    if (!hasData) return;\n    const geoJson = {\n      type: \"FeatureCollection\",\n      features: data\n        .filter((element) => {\n          if (element.total_confirmed_cases === 0 && filter === true)\n            return false;\n          return true;\n        })\n        .map((region = {}) => {\n          const { latitude: lat, longtitude: lng } = region;\n          return {\n            type: \"Feature\",\n            properties: {\n              ...region,\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [lng, lat],\n            },\n          };\n        }),\n    };\n\n    const geoJsonLayers = new L.GeoJSON(geoJson, {\n      pointToLayer: (feature = {}, latlng) => {\n        const { properties = {} } = feature;\n        let casesString;\n\n        const {\n          capacity,\n          \"last update\": lastupdate,\n          name_en,\n          region_en,\n          total_confirmed_cases,\n          total_samples,\n        } = properties;\n\n        casesString = `${capacity}`;\n\n        if (capacity > 1000) {\n          casesString= `${casesString.slice(0, -3)}χ+`;\n        }\n        \n        let capacity_fixed = (capacity === null) ? 'N/A' : capacity\n\n        const html = `\n          <span class=\"icon-marker\">\n            <span class=\"icon-marker-tooltip\">\n              <h3>${name_en} Camp</h3>\n              <h3>${region_en}</h3>\n              <ul>\n              <li><strong>Capacity:</strong> ${capacity_fixed}</li>\n              <li><strong>COVID19 Tests:</strong> ${total_samples}</li>\n              <li><strong>COVID19 incidents:</strong> ${total_confirmed_cases}</li>\n                <li><strong>Last Update:</strong> ${lastupdate}</li>\n              </ul>\n            </span>\n            ${name_en}\n          </span>\n        `;\n\n        return L.marker(latlng, {\n          icon: L.divIcon({\n            className: \"icon\",\n            html\n          }),\n          riseOnHover: true\n        });\n      },\n    });\n\n    geoJsonLayers.addTo(map);\n  }\n\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: \"OpenStreetMap\",\n    zoom: DEFAULT_ZOOM,\n    mapEffect,\n    zoomSnap: 0.10,\n    zoomDelta: 0.2,\n  };\n\n  const setMappingFilter = () => {\n    setfilter(!filter);\n  };\n\n  return (\n    <Layout pageName=\"home\">\n      <Helmet>\n        <title>Refugee Camps Greece - Covid19</title>\n      </Helmet>\n      {filter && <Map {...mapSettings} setfilter={setMappingFilter} />}\n      {!filter && <Map {...mapSettings} setfilter={setMappingFilter} />}\n\n      <Container type=\"content\" className=\"home-start\">\n        <h2>\n        STATISTICS IN REFUGEE CAMP STRUCTURES\n        </h2>\n        <pre></pre>\n        <p>Includes: <br></br>\n        Evolution of Covid19 cases<br></br>\n        Number of Covid19 Tests that have been done<br></br>\n        Capacity of Hosting Structure<br></br>\n        Statistical graphs with diary recording of COVID19 cases per structure\n        </p>\n        <p>Developed by volunteers of <a href=\"https://www.covid19response.gr/\">Covid-19 Response Greece</a>\n        <br />Data provided by <a href=\"https://www.uoa.gr/\">National &amp; Kapodistrian University of Athens</a> via <a href=\"https://covid-19-greece.herokuapp.com/\">Coronavirus Greece API</a></p>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n","import React, { useState } from 'react';\nimport { Link } from \"gatsby\"\nimport 'assets/stylesheets/components/__components.scss';\nimport { Button } from 'reactstrap';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavbarText\n} from 'reactstrap';\n\n//class Header extends React.component\n\n const Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <div>\n      <Navbar style={{height: '70px'}} fixed=\"top\" color=\"dark\" dark expand=\"lg\"><a href=\"https://camps.covid19response.gr\"></a>\n        <NavbarBrand>\n        <Link to=\"/indexen/\" style={{color: 'white', fontSize: '11px' }}>STATISTICS IN GREEK<br></br>REFUGEES CAMPS</Link></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"container\" navbar>\n          <NavItem>\n            <Link to=\"/indexen/\" style={{color: 'white'}}>Camps Information Map <a href=\"\" class=\"badge-pill badge badge-info\">Info from 47 Camps</a></Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/covid19campsen/\" style={{color: 'white'}}>COVID19 incidents by Camp <a href=\"\" class=\"badge-pill badge badge-danger\">Total: 736</a></Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/geolocateen/\" style={{color: 'white'}}>Camps close to you <a href=\"\" class=\"badge-pill badge badge-info\">Geolocation</a></Link>\n          </NavItem>\n          </Nav>\n          <NavbarText><Button color=\"success\" border-radius= \"20\" href=\"/chartsen/\">GRAPHS</Button>{''}</NavbarText>\n          <NavbarText><Button color=\"info\" border-radius= \"20\" href=\"/informationen/\">ABOUT</Button>{''}</NavbarText>\n          <div class=\"btn-group\" role=\"group\" aria-label=\"GR-EN\">\n          <a href=\"/\" class=\"btn btn-secondary btn-sm active\" role=\"button\" aria-pressed=\"true\">GR</a>\n          <a href=\"/indexen/\" class=\"btn btn-secondary btn-sm\" role=\"button\" aria-pressed=\"true\">EN</a>\n          </div>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n }\n\n export default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport 'assets/stylesheets/application.scss';\nimport Header from 'components/Headeren';\nimport Footer from 'components/Footer';\n\nconst Layout = ({ children, pageName }) => {\n  let className = '';\n\n  if ( pageName ) {\n    className = `${className} page-${pageName}`;\n  }\n\n  return (\n    <>\n      <Helmet bodyAttributes={{ class: className }}>\n        <title>Refugee Camps Greece - Covid19</title>\n      </Helmet>\n      <div className=\"wrapper\">\n        <Header />\n        <main style={{marginTop: '70px'}}>{ children }</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  pageName: PropTypes.string\n};\n\nexport default Layout;\n\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map as BaseMap, TileLayer, ZoomControl } from 'react-leaflet';\nimport Control from './Control';\nimport { useConfigureLeaflet, useMapServices, useRefEffect } from 'hooks';\nimport { isDomAvailable } from 'lib/util';\n\nconst Map = ( props ) => {\n  const { children, className, defaultBaseMap = 'OpenStreetMap', mapEffect, setfilter,...rest } = props;\n\n  const mapRef = useRef();\n\n  useConfigureLeaflet();\n\n  useRefEffect({\n    ref: mapRef,\n    effect: mapEffect\n  });\n\n  const services = useMapServices({\n    names: ['OpenStreetMap']\n  });\n  const basemap = services.find(( service ) => service.name === defaultBaseMap );\n\n  let mapClassName = `map`;\n\n  if ( className ) {\n    mapClassName = `${mapClassName} ${className}`;\n  }\n\n  if ( !isDomAvailable()) {\n    return (\n      <div className={mapClassName}>\n        <p className=\"map-loading\">Φορτώστε...</p>\n      </div>\n    );\n  }\n\n  const mapSettings = {\n    className: 'map-base',\n    zoomControl: false,\n    ...rest,\n  };\n\n  return (\n    <div className={mapClassName}>\n      <BaseMap ref={mapRef} {...mapSettings}>\n        { children }\n        { basemap && <TileLayer {...basemap} /> }\n        <ZoomControl position=\"bottomright\" />\n        <Control position=\"bottomright\" >\n        <button type=\"button\" class=\"btn btn-danger\"\n          style={{fontSize:'12px'}}\n          onClick={ () => setfilter(true) }\n        >\n          Display | Hide Camps with NO COVID19 incidents\n        </button>\n        <p class=\"lead\"></p>\n        <div class=\"jumbotron\">\n        <p class=\"lead\">REFUGEE CAMPS</p>\n  <p>WITH THE HIGHER LEVEL INCIDENTS</p>\n  <p></p>\n</div>\n      </Control>\n      </BaseMap>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultBaseMap: PropTypes.string,\n  mapEffect: PropTypes.func\n};\n\nexport default Map;"],"sourceRoot":""}