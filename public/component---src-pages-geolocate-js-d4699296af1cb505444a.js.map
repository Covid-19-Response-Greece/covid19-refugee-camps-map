{"version":3,"sources":["webpack:///./src/components/Header.js","webpack:///./src/components/Layout.js","webpack:///./src/pages/geolocate.js","webpack:///./src/components/Mapen.js"],"names":["Header","useState","isOpen","setIsOpen","Navbar","style","height","fixed","color","dark","expand","href","NavbarBrand","to","fontSize","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","class","NavbarText","Button","border-radius","role","aria-label","aria-pressed","Layout","children","pageName","bodyAttributes","marginTop","Footer","CENTER","SecondPage","React","data","setdata","filter","setfilter","map","leafletElement","locate","setView","maxZoom","Array","isArray","length","geoJson","type","features","element","total_confirmed_cases","region","lat","latitude","lng","longtitude","properties","geometry","coordinates","L","GeoJSON","pointToLayer","feature","latlng","casesString","capacity","lastupdate","description","name_gr","region_gr","total_samples","slice","html","marker","icon","divIcon","riseOnHover","addTo","useEffect","response","axios","get","fetchData","setMappingFilter","mapSettings","center","defaultBaseMap","zoom","mapEffect","zoomSnap","zoomDelta","Map","props","rest","mapRef","useRef","useConfigureLeaflet","useRefEffect","ref","effect","basemap","useMapServices","names","find","service","name","mapClassName","isDomAvailable","zoomControl","position"],"mappings":"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","file":"component---src-pages-geolocate-js-d4699296af1cb505444a.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from \"gatsby\"\nimport 'assets/stylesheets/components/__components.scss';\nimport { Button } from 'reactstrap';\n\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavbarText\n} from 'reactstrap';\n\n//class Header extends React.component\n\n const Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const toggle = () => setIsOpen(!isOpen);\n  return (\n    <div>\n      <Navbar style={{height: '70px'}} fixed=\"top\" color=\"dark\" dark expand=\"lg\"><a href=\"https://camps.covid19response.gr\"></a>\n        <NavbarBrand>\n        <Link to=\"/\" style={{color: 'white', fontSize: '11px' }}>ΣΤΑΤΙΣΤΙΚΑ ΣΤΙΣ ΔΟΜΕΣ<br></br>ΦΙΛΟΞΕΝΙΑΣ ΠΡΟΣΦΥΓΩΝ</Link></NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"container\" navbar>\n          <NavItem>\n            <Link to=\"/\" style={{color: 'white'}}>Χάρτης Πληροφοριών Δομών <a href=\"\" class=\"badge-pill badge badge-info\">Info απο 47 Camps</a></Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/covid19camps/\" style={{color: 'white'}}>Κρούσματα COVID19 ανά Δομή <a href=\"\" class=\"badge-pill badge badge-danger\">Σύνολο: 736</a></Link>\n          </NavItem>\n          <NavItem>\n            <Link to=\"/geolocate/\" style={{color: 'white'}}>Εντοπισμός Δομής <a href=\"\" class=\"badge-pill badge badge-info\">Geolocation</a></Link>\n          </NavItem>\n          </Nav>\n          <NavbarText><Button color=\"success\" border-radius= \"20\" href=\"/charts/\">ΓΡΑΦΗΜΑΤΑ</Button>{''}</NavbarText>\n          <NavbarText><Button color=\"info\" border-radius= \"20\" href=\"/information/\">ΣΧΕΤΙΚΑ</Button>{''}</NavbarText>\n          <div class=\"btn-group\" role=\"group\" aria-label=\"GR-EN\">\n          <a href=\"/\" class=\"btn btn-secondary btn-sm active\" role=\"button\" aria-pressed=\"true\">GR</a>\n          <a href=\"/indexen/\" class=\"btn btn-secondary btn-sm\" role=\"button\" aria-pressed=\"true\">EN</a>\n          </div>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n }\n\n export default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport 'assets/stylesheets/application.scss';\nimport Header from 'components/Header';\nimport Footer from 'components/Footer';\n\nconst Layout = ({ children, pageName }) => {\n  let className = '';\n\n  if ( pageName ) {\n    className = `${className} page-${pageName}`;\n  }\n\n  return (\n    <>\n      <Helmet bodyAttributes={{ class: className }}>\n        <title>Refugee Camps Greece - Covid19</title>\n      </Helmet>\n      <div className=\"wrapper\">\n        <Header />\n        <main style={{marginTop: '70px'}}>{ children }</main>\n        <Footer />\n      </div>\n    </>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  pageName: PropTypes.string\n};\n\nexport default Layout;\n\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport L from \"leaflet\";\nimport axios from \"axios\";\nimport Layout from \"components/Layout\";\nimport Container from \"components/Container\";\nimport Map from \"components/Mapen\";\n\nconst LOCATION = {\n  lat: 38.814566,\n  lng: 24.06738,\n};\nconst CENTER = [LOCATION.lat, LOCATION.lng];\nconst DEFAULT_ZOOM = 10;\n\nconst SecondPage = () => {\n  const [data, setdata] = React.useState([]);\n  const [filter, setfilter] = React.useState(false);\n  React.useEffect(() => {\n    async function fetchData() {\n      const response = await axios.get(\n        \"https://covid-19-greece.herokuapp.com/refugee-camps\"\n      );\n\n      setdata(response.data[\"refugee-camps\"]);\n    }\n    fetchData();\n  }, []);\n\n  \n\n  async function mapEffect({ leafletElement: map } = {}) {\n    map.locate({ setView: true, maxZoom: 16 });\n\n    const hasData = Array.isArray(data) && data.length >= 0;\n\n    if (!hasData) return;\n\n    const geoJson = {\n      type: \"FeatureCollection\",\n      features: data\n        .filter((element) => {\n          if (element.total_confirmed_cases === 0 && filter === true)\n            return false;\n          return true;\n        })\n        .map((region = {}) => {\n          const { latitude: lat, longtitude: lng } = region;\n          return {\n            type: \"Feature\",\n            properties: {\n              ...region,\n            },\n            geometry: {\n              type: \"Point\",\n              coordinates: [lng, lat],\n            },\n          };\n        }),\n    };\n\n    const geoJsonLayers = new L.GeoJSON(geoJson, {\n      pointToLayer: (feature = {}, latlng) => {\n        const { properties = {} } = feature;\n        let casesString;\n\n        const {\n          capacity,\n          \"last update\": lastupdate,\n          description,\n          name_gr,\n          region_gr,\n          total_confirmed_cases,\n          total_samples,\n        } = properties;\n\n        casesString = `${capacity}`;\n\n        if (capacity > 1000) {\n          casesString = `${casesString.slice(0, -3)}χ+`;\n        }\n\n        let capacity_fixed = (capacity === null) ? 'N/A' : capacity\n\n        const html = `\n          <span class=\"icon-marker\">\n            <span class=\"icon-marker-tooltip\">\n              <h3> Camp ${name_gr}</h3>\n              <h3>${region_gr}</h3>\n              <ul>\n              <li><strong>Χωρητικότητα:</strong> ${capacity}</li>\n              <li><strong>Αριθμός Tests:</strong> ${total_samples}</li>\n              <li><strong>Κρούσματα COVID19:</strong> ${total_confirmed_cases}</li>\n                <li><i><h2>Camp info:</h2> ${description} </i></li>\n                <li><strong>Τελευταία ενημέρωση::</strong> ${lastupdate}</li>\n              </ul>\n            </span>\n            ${name_gr}\n          </span>\n        `;\n\n        return L.marker(latlng, {\n          icon: L.divIcon({\n            className: \"icon\",\n            html,\n          }),\n          riseOnHover: true,\n        });\n      },\n    });\n\n    geoJsonLayers.addTo(map);\n  }\n  const setMappingFilter = () => {\n    setfilter(!filter);\n  };\n  const mapSettings = {\n    center: CENTER,\n    defaultBaseMap: \"OpenStreetMap\",\n    zoom: DEFAULT_ZOOM,\n    mapEffect,\n    zoomSnap: 0.10,\n    zoomDelta: 0.2,\n  };\n\n  return (\n    <Layout pageName=\"home\">\n      <Helmet>\n        <title>Refugee Camps Greece - Covid19</title>\n      </Helmet>\n\n      {filter && <Map {...mapSettings} setfilter={setMappingFilter} />}\n      {!filter && <Map {...mapSettings} setfilter={setMappingFilter} />}\n\n      <Container type=\"content\" className=\"home-start\">\n        <h2>\n        ΣΤΑΤΙΣΤΙΚΑ ΣΤΙΣ ΔΟΜΕΣ ΦΙΛΟΞΕΝΙΑΣ ΠΡΟΣΦΥΓΩΝ\n        </h2>\n        <pre></pre>\n        <p>Περιλαμβάνει: <br></br>\n        Eξέλιξη των Covid19 κρουσμάτων<br></br>\n        Αριθμός Covid19 Tests που έχουν γίνει<br></br>\n        Χωρητικότητα Δομής Φιλοξενίας<br></br>\n        Στατιστικά γραφήματα με ημερολογιακή καταγραφή των κρουσμάτων COVID19 ανά δομή\n        </p>\n        <p>Developed by volunteers of <a href=\"https://www.covid19response.gr/\">Covid-19 Response Greece</a>\n        <br />Data provided by <a href=\"https://www.uoa.gr/\">National &amp; Kapodistrian University of Athens</a> via <a href=\"https://covid-19-greece.herokuapp.com/\">Coronavirus Greece API</a></p>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default SecondPage;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map as BaseMap, TileLayer, ZoomControl } from 'react-leaflet';\nimport Control from './Control';\nimport { useConfigureLeaflet, useMapServices, useRefEffect } from 'hooks';\nimport { isDomAvailable } from 'lib/util';\n\nconst Map = ( props ) => {\n  const { children, className, defaultBaseMap = 'OpenStreetMap', mapEffect, setfilter,...rest } = props;\n\n  const mapRef = useRef();\n\n  useConfigureLeaflet();\n\n  useRefEffect({\n    ref: mapRef,\n    effect: mapEffect\n  });\n\n  const services = useMapServices({\n    names: ['OpenStreetMap']\n  });\n  const basemap = services.find(( service ) => service.name === defaultBaseMap );\n\n  let mapClassName = `map`;\n\n  if ( className ) {\n    mapClassName = `${mapClassName} ${className}`;\n  }\n\n  if ( !isDomAvailable()) {\n    return (\n      <div className={mapClassName}>\n        <p className=\"map-loading\">Φορτώστε...</p>\n      </div>\n    );\n  }\n\n  const mapSettings = {\n    className: 'map-base',\n    zoomControl: false,\n    ...rest,\n  };\n\n  return (\n    <div className={mapClassName}>\n      <BaseMap ref={mapRef} {...mapSettings}>\n        { children }\n        { basemap && <TileLayer {...basemap} /> }\n        <ZoomControl position=\"bottomright\" />\n        <Control position=\"bottomright\" >\n        <button type=\"button\" class=\"btn btn-danger\"\n          style={{fontSize:'12px'}}\n          onClick={ () => setfilter(true) }\n        >\n          Display | Hide Camps with NO COVID19 incidents\n        </button>\n        <p class=\"lead\"></p>\n        <div class=\"jumbotron\">\n        <p class=\"lead\">REFUGEE CAMPS</p>\n  <p>WITH THE HIGHER LEVEL INCIDENTS</p>\n  <p></p>\n</div>\n      </Control>\n      </BaseMap>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  defaultBaseMap: PropTypes.string,\n  mapEffect: PropTypes.func\n};\n\nexport default Map;"],"sourceRoot":""}